// <auto-generated />
using System;
using CurrencyConverter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyConverter.Migrations
{
    [DbContext(typeof(CurrencyConverterContext))]
    partial class CurrencyConverterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurrencyConverter.Models.Conversion", b =>
                {
                    b.Property<int>("Conversion_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Conv_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Conv_Input_Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Conv_Input_Value")
                        .HasColumnType("float");

                    b.Property<string>("Conv_Output_Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Conv_Output_Value")
                        .HasColumnType("float");

                    b.Property<string>("CurrencyModelCurrency_Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Conversion_ID");

                    b.HasIndex("CurrencyModelCurrency_Name");

                    b.ToTable("Conversion");
                });

            modelBuilder.Entity("CurrencyConverter.Models.Currency", b =>
                {
                    b.Property<string>("Currency_Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Currency_Value")
                        .HasColumnType("float");

                    b.HasKey("Currency_Name");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("CurrencyConverter.Models.Conversion", b =>
                {
                    b.HasOne("CurrencyConverter.Models.Currency", "CurrencyModel")
                        .WithMany()
                        .HasForeignKey("CurrencyModelCurrency_Name");
                });
#pragma warning restore 612, 618
        }
    }
}
